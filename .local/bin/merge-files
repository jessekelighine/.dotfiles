#!/usr/bin/env bash

message () {
	local g; g=$(tput bold && tput setaf 10)
	local b; b=$(tput bold && tput setaf 12)
	local n; n=$(tput sgr0)
	cat << EOF
${g}usage:${n} ${b}$(basename $0)${n} [base file] [secondary file] [output file]
${g}description:${n}
	Merge changes from [secondary file] into the [base file]
	and output to [output file] if provided. If [output file]
	is not provided, the output will be written directly to
	[base file]. The [secondary file] is not modified.
EOF
}

# error handling
[[ $# -lt 1 || $# -gt 3 ]] && {
	message >&2
	exit 1
}

# make a temporary file for merge
temp_file=$(mktemp -t $(basename $0)) || exit 1
trap "$(which rm) -rf $temp_file" EXIT

# merge file
[ -n "$3" ] && {
	three="$3 ($1)"
	cp "$1" "$three"
}

git merge-file "${three:-$1}" "$temp_file" "$2"

[ -n "$3" ] && mv "$three" "$3"

exit 0
