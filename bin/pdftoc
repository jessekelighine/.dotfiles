#!/usr/bin/env bash

message () {
	local green; green=$(tput bold && tput setaf 10)
	local blue;  blue=$(tput bold && tput setaf 12)
	local norm;  norm=$(tput sgr0)
	cat << EOF
${green}usage:${norm} ${blue}$(basename "$0")${norm} [input.pdf] [output.pdf] [pdfmarks]
${green}description:${norm}
	If [pdfmarks] is not provided, $(basename "$0") will automatically
	search for a file named 'pdfmarks' in the current directory.

${blue}"pdfmarks" example:${norm}

[/Count 2 /Title (Part I)         /Page  1 /OUT pdfmark
[/Count 3 /Title (1. Section)     /Page  2 /OUT pdfmark
[         /Title (1.1 Subsection) /Page  3 /OUT pdfmark
[         /Title (1.2 Subsection) /Page  4 /OUT pdfmark
[         /Title (1.3 Subsection) /Page  5 /OUT pdfmark
[/Count 1 /Title (2. Section)     /Page  6 /OUT pdfmark
[         /Title (2.1 Subsection) /Page  7 /OUT pdfmark
[/Count 1 /Title (Part II)        /Page  8 /OUT pdfmark
[/Count 2 /Title (3. Section)     /Page  9 /OUT pdfmark
[         /Title (3.1 Subsection) /Page 10 /OUT pdfmark
[         /Title (3.2 Subsection) /Page 11 /OUT pdfmark

${blue}re-numbering pages:${norm}

<< /Type /Catalog /Pages 1 0 R
   /PageLabels << /Nums [ 0 << /P (Cover) >> % labels 1st page with the string 'Cover'
			  1 << /S /r >> % numbers pages 2-6 in small norm numerals
			  6 << /S /D >> % numbers pages 7-x in decimal arabic numerals
			] >>
>>

${blue}re-numbering pages in "pdfmarks":${norm}

[ {Catalog} <<
/PageLabels << /Nums [ 0 << /P (cover) >>
		       1 << /S /r >>
		       5 << /S /D >>
		     ] >>
>> /PUT pdfmark
EOF
}

[[ $# -lt 2 ]] && message >&2 && exit 1

gs -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile="$2" "$1" "${3:-pdfmarks}"

exit 0
